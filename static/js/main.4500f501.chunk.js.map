{"version":3,"sources":["redux-composed.js","pages/Login.js","pages/Logout.js","pages/contacts/Avatar.js","pages/contacts/Detail.js","pages/contacts/Cards.js","pages/contacts/Contacts.js","pages/contacts/MyContacts.js","pages/Main.js","redux/app-reducer.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","user","serialized","localStorage","getItem","JSON","parse","err","readUserFromLocalStorage","store","createStore","state","type","payload","applyMiddleware","thunk","logger","userLogin","role","dispatch","timeoutPromise","then","token","data","console","log","setItem","stringify","ms","ctr","rej","promise","Promise","resolve","reject","setTimeout","cancel","clearTimeout","Error","withRouter","history","useState","setRole","useDispatch","onSubmit","e","preventDefault","push","name","value","onChange","target","useEffect","clear","onClick","Avatar","props","className","src","img","alt","detailStyle","padding","Detail","style","details","Card","count","imgUrl","phone","email","id","Math","floor","random","imageSrc","Contacts","MyContacts","mapContacts","map","contact","index","MainPage","localUser","getUser","actions","PrivateRoute","Component","component","rest","loggedIn","useSelector","Boolean","render","to","pathname","from","location","AppContainer","compose","connect","initializeApp","promiseAll","all","catchAllUnhandledErrors","useCallback","alert","window","addEventListener","path","LoginPage","LogoutPage","ContactListApp","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootElement","document","getElementById","ReactDOM"],"mappings":"wLAIaA,EAAe,CAC1BC,KAqEF,WACE,IACE,IAAMC,EAAaC,aAAaC,QAAQ,QACxC,GAAmB,OAAfF,EACF,OAEF,OAAOG,KAAKC,MAAMJ,GAEpB,MAAOK,GACL,QA9EIC,IAoBKC,EAAQC,aAhBE,WAA8C,IAA7CC,EAA4C,uDAApCX,EAAoC,yCAApBY,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QACpD,OAAQD,GACN,IAAK,aACH,MAAO,CACLX,KAAMY,GAEV,IAAK,cACH,MAAO,CACLZ,KAAM,MAEV,QACE,OAAOU,KAOXX,EACAc,YAAgBC,IAAOC,MAOZC,EAAY,SAACC,GAAD,OAAU,SAAAC,GACjC,OAAOC,EAAe,KACnBC,MAAK,kBACJF,EAAS,CACPP,KAAM,aACNC,QAAS,CACPK,KAAMA,EACNI,MAAO,4BAIZD,MAAK,SAACE,GACLC,QAAQC,IAAI,SAAUF,GACtBpB,aAAauB,QAAQ,OAAQrB,KAAKsB,UAAUJ,SAY5CH,EAAiB,SAACQ,GACtB,IAAIC,EAAKC,EACHC,EAAU,IAAIC,SAAQ,SAAUC,EAASC,GAC7CL,EAAMM,WAAWF,EAASL,GAC1BE,EAAMI,KAMR,OAJAH,EAAQK,OAAS,WACfC,aAAaR,GACbC,EAAIQ,MAAM,eAELP,G,kDCtCMQ,eA1BD,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EACLC,mBAAS,IADJ,mBACtBvB,EADsB,KAChBwB,EADgB,KAGvBvB,EAAWwB,cAajB,OACE,uBAAMC,SAZQ,SAACC,GACfA,EAAEC,iBACFtB,QAAQC,IAAI,gBAAiB,CAACP,IAC9BC,EAASF,EACP,CAACC,UAEAG,MAAK,WACJmB,EAAQO,KAAK,aAKjB,UACE,uBAAOC,KAAK,OAAOpC,KAAK,OAAOqC,MAAO/B,EAC/BgC,SAAU,SAAAL,GAAC,OAAIH,EAAQG,EAAEM,OAAOF,UACvC,uBACA,iDCDSV,eApBA,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACTrB,EAAWwB,cAEjBS,qBAAU,WACNjC,GF0C0B,SAAAA,GAE9B,OADAhB,aAAakD,QACNlC,EAAS,CACdP,KAAM,qBE5CL,CAACO,IAOJ,OACE,gCACE,uDACA,wBAAQmC,QARG,SAACT,GACdA,EAAEC,iBACFN,EAAQO,KAAK,WAMX,2BChBSQ,G,MAHA,SAAAC,GACb,OAAO,qBAAKC,UAAU,QAAQC,IAAKF,EAAMG,IAAKC,IAAI,aCG9CC,EAAc,CAClBC,QAAS,UAGIC,EARA,SAAAP,GACb,OAAO,mBAAGQ,MAAOH,EAAV,SAAwBL,EAAMS,WCCxB,SAASC,EAAKV,GAC3B,OACE,sBAAKC,UAAU,OAAf,UACE,sBAAKA,UAAU,OAAf,UACE,4BAAID,EAAMW,QACV,6BAAKX,EAAMR,UAEb,cAAC,EAAD,CAAQW,IAAKH,EAAMY,SACnB,sBAAKX,UAAU,UAAf,UACE,cAAC,EAAD,CAAQQ,QAAST,EAAMa,QACvB,cAAC,EAAD,CAAQJ,QAAST,EAAMc,cCd/B,IAAMC,EAAK,WACT,OAAOC,KAAKC,MAAsB,IAAhBD,KAAKE,SAAiB,IAGpCC,EAAW,2CAyBFC,EAvBE,CACf,CACE5B,KAAM,YACNoB,OAAO,GAAD,OAAKO,GAAL,OAAgBJ,IAAhB,QACNF,MAAO,eAET,CACErB,KAAM,YACNoB,OAAO,GAAD,OAAKO,GAAL,OAAgBJ,IAAhB,QACNF,MAAO,gBAET,CACErB,KAAM,WACNoB,OAAO,GAAD,OAAKO,GAAL,OAAgBJ,IAAhB,QACNF,MAAO,gBAET,CACErB,KAAM,YACNoB,OAAO,GAAD,OAAKO,GAAL,OAAgBJ,IAAhB,QACNF,MAAO,iBCpBI,SAASQ,IACtB,IAAMC,EAAcF,EAASG,KAAI,SAACC,EAASC,GACzC,OACE,cAACf,EAAD,CACElB,KAAMgC,EAAQhC,KACdoB,OAAQY,EAAQZ,OAChBC,MAAOW,EAAQX,MACfC,MAAOU,EAAQV,MAEfH,MAAOc,EAAQ,GADVA,MAKX,OACE,sBAAKxB,UAAU,UAAf,UACE,6CAECqB,KChBP,IA2BeI,EA3BE,SAAC,GAAe,IAAd1C,EAAa,EAAbA,QAkBjB,OACE,sBAAKiB,UAAU,SAAf,UACE,6CAnBY,WACd,IAAIxD,EACEkF,EAAYhF,aAAaC,QAAQ,QAGvC,IAFAH,EAAOI,KAAKC,MAAM6E,IAEPtE,QAAQK,KACjB,OAAOjB,EAAKY,QAAQK,KAAKA,KAEzBsB,EAAQO,KAAK,UAWCqC,MACd,wBAAQ9B,QARG,SAACT,GACdA,EAAEC,iBACFN,EAAQO,KAAK,YAMX,oBACA,cAAC8B,EAAD,QCTOQ,EACS,iBAAO,CAACzE,KAAM,wBCR9B0E,EAAe,SAAC,GAAuC,IAA1BC,EAAyB,EAApCC,UAAyBC,EAAW,6BAEpDC,EAAWC,aAAY,SAAChF,GAAD,OAAWiF,QAAQjF,EAAMV,SAStD,OAPKyF,EAIHlE,QAAQC,IAAI,2BAHZD,QAAQC,IAAI,gCAOZ,cAAC,IAAD,2BACMgE,GADN,IAEEI,OAAQ,SAAArC,GAAK,OACVkC,EAIC,cAACH,EAAD,eAAe/B,IAHf,cAAC,IAAD,CAAUsC,GAAI,CAAEC,SAAU,SAAUpF,MAAO,CAAEqF,KAAMxC,EAAMyC,kBAgC/DC,EAAeC,YACjB5D,IACA6D,YAAQ,KAAM,CAACC,cDtCY,kBAAM,SAAClF,GAClC,IAAImF,EAAanF,EAASF,KAC1Be,QAAQuE,IAAI,CAACD,IACVjF,MAAK,WACJF,EAASkE,YCgCIc,EAvBP,SAAC3C,GACX,IAAMgD,EAA0BC,uBAAY,SAAC5D,GAC3C6D,MAAM,2BACL,IAUH,OARAtD,qBAAU,WACRI,EAAM6C,kBACL,CAAC7C,IAEJJ,qBAAU,WACRuD,OAAOC,iBAAiB,qBAAsBJ,KAC7C,CAACA,IAGF,eAAC,IAAD,WACA,cAAC,IAAD,CAAOxD,KAAK,QAAQ6D,KAAK,SAASrB,UAAWsB,IAC7C,cAAC,EAAD,CAAc9D,KAAK,SAAS6D,KAAK,UAAUrB,UAAWuB,IACtD,cAAC,EAAD,CAAc/D,KAAK,OAAO6D,KAAK,QAAQrB,UAAWN,IAClD,cAAC,IAAD,CAAUc,KAAK,IAAIF,GAAG,gBAkBXkB,EARQ,WACrB,OACE,cAAC,IAAD,UACI,cAACd,EAAD,OCxDOe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB9F,MAAK,YAAkD,IAA/C+F,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCCRO,EAAcC,SAASC,eAAe,QAE5CC,IAAS/B,OACP,cAAC,IAAD,CAAUpF,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEAgH,GAMJR,M","file":"static/js/main.4500f501.chunk.js","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\nimport logger from \"redux-logger\";\nimport thunk from \"redux-thunk\";\n\nexport const initialState = {\n  user: readUserFromLocalStorage(),\n};\n\n// Reducer\nexport const reducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case \"USER_LOGIN\":\n      return {\n        user: payload\n      };\n    case \"USER_LOGOUT\":\n      return {\n        user: null,\n      };\n    default:\n      return state;\n  }\n};\n\n// Store\nexport const store = createStore(\n  reducer,\n  initialState,\n  applyMiddleware(thunk, logger)\n);\n\nexport const selectIsAuth = (store) => {\n  return store.user.role\n}\n// Actions\nexport const userLogin = (role) => dispatch => {\n  return timeoutPromise(1000)\n    .then(() => (\n      dispatch({\n        type: \"USER_LOGIN\",\n        payload: {\n          role: role,\n          token: \"token7j34e8ffdjg348\",\n        }\n      }))\n    )\n    .then((data) => {\n      console.log(\"THEN: \", data);\n      localStorage.setItem(\"user\", JSON.stringify(data));\n    });\n}\n\nexport const userLogout = () => dispatch => {\n  localStorage.clear();\n  return dispatch({\n    type: \"USER_LOGOUT\"\n  });\n};\n\n// Helpers\nconst timeoutPromise = (ms) => {\n  let ctr, rej;\n  const promise = new Promise(function (resolve, reject) {\n    ctr = setTimeout(resolve, ms);\n    rej = reject;\n  });\n  promise.cancel = () => {\n    clearTimeout(ctr);\n    rej(Error(\"Cancelled\"))\n  };\n  return promise;\n}\n\n// Read user from the localStorage\nfunction readUserFromLocalStorage() {\n  try {\n    const serialized = localStorage.getItem('user');\n    if (serialized === null) {\n      return undefined;\n    }\n    return JSON.parse(serialized);\n  }\n  catch (err) {\n    return undefined;\n  }\n}","import React, { useState } from 'react'\nimport { useDispatch } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\n\nimport {userLogin} from \"../redux-composed\";\n\nconst Login = ({ history }) => {\n  const [role, setRole] = useState('');\n\n  const dispatch = useDispatch();\n\n  const doLogin = (e) => {\n    e.preventDefault();\n    console.log(\"Logging in...\", [role]);\n    dispatch(userLogin(\n      {role}\n    ))\n      .then(() => {\n        history.push(\"/main\");\n      })\n  };\n\n  return (\n    <form onSubmit={doLogin}>\n      <input name=\"role\" type=\"text\" value={role}\n             onChange={e => setRole(e.target.value)}/>\n      <br />\n      <button>Login</button>\n    </form>\n  )\n};\n\nexport default withRouter(Login);\n","import React, {useEffect} from 'react'\nimport {useDispatch} from \"react-redux\";\n\nimport { userLogout } from \"../redux-composed\";\nimport {withRouter} from \"react-router-dom\";\n\nconst Logout = ({history}) => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n      dispatch(userLogout())\n  }, [dispatch]);\n\n  const goBack = (e) => {\n    e.preventDefault();\n    history.push('/login');\n  }\n\n  return (\n    <div>\n      <div>Back to Main page...</div>\n      <button onClick={goBack}>Go back</button>\n    </div>\n  )\n};\n\nexport default withRouter(Logout);\n","import React from \"react\";\n\nconst Avatar = props => {\n  return <img className=\"image\" src={props.img} alt=\"avatar\" />;\n};\nexport default Avatar;\n","import React from \"react\";\n\nconst Detail = props => {\n  return <p style={detailStyle}>{props.details}</p>;\n};\n\nconst detailStyle = {\n  padding: \"0.2rem\"\n};\n\nexport default Detail;\n","import React from \"react\";\nimport Avatar from \"./Avatar\";\nimport Detail from \"./Detail\";\n\nexport default function Card(props) {\n  return (\n    <div className=\"card\">\n      <div className=\"head\">\n        <p>{props.count}</p>\n        <h2>{props.name}</h2>\n      </div>\n      <Avatar img={props.imgUrl} />\n      <div className=\"content\">\n        <Detail details={props.phone} />\n        <Detail details={props.email} />\n      </div>\n    </div>\n  );\n}\n","const id = () => {\n  return Math.floor(Math.random() * 100 + 1);\n};\n\nconst imageSrc = \"https://randomuser.me/api/portraits/men/\";\n\nconst Contacts = [\n  {\n    name: \"Ben Smith\",\n    imgUrl: `${imageSrc}${id()}.jpg`,\n    phone: \"555-555-555\",\n  },\n  {\n    name: \"Mark Hill\",\n    imgUrl: `${imageSrc}${id()}.jpg`,\n    phone: \"999-999-9999\",\n  },\n  {\n    name: \"Sam Shoe\",\n    imgUrl: `${imageSrc}${id()}.jpg`,\n    phone: \"444-333-5678\",\n  },\n  {\n    name: \"Larry Cox\",\n    imgUrl: `${imageSrc}${id()}.jpg`,\n    phone: \"684-344-5678\",\n  }\n];\n\nexport default Contacts;\n","import React from \"react\";\nimport \"./styles.css\";\nimport Card from \"./Cards\";\nimport Contacts from \"./Contacts\";\n\nexport default function MyContacts() {\n  const mapContacts = Contacts.map((contact, index) => {\n    return (\n      <Card\n        name={contact.name}\n        imgUrl={contact.imgUrl}\n        phone={contact.phone}\n        email={contact.email}\n        key={index}\n        count={index + 1}\n      />\n    );\n  });\n  return (\n    <div className=\"wrapper\">\n      <h1>My Contacts</h1>\n\n      {mapContacts}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport {selectIsAuth} from \"../redux-composed\";\nimport {useSelector} from \"react-redux\";\nimport MyContacts from \"./contacts/MyContacts\";\n\nconst MainPage = ({history}) => {\n  const getUser = () => {\n    let user = {};\n    const localUser = localStorage.getItem('user')\n    user = JSON.parse(localUser);\n\n    if (!!user.payload.role) {\n      return user.payload.role.role\n    } else {\n      history.push('/login');\n    }\n  }\n  debugger;\n  const logout = (e) => {\n    e.preventDefault();\n    history.push('/logout');\n  }\n\n  return (\n    <div className=\"header\">\n      <h1>{`Hello ${getUser()}`}</h1>\n      <button onClick={logout}>Logout</button>\n      <MyContacts />\n    </div>\n  );\n};\n\nexport default MainPage;\n","import {userLogin} from \"../redux-composed\";\n\nexport let initialState = {\n  initialized: false,\n};\n\nconst appReducer = (state = initialState, action) => {\n  switch (action.type){\n    case 'INITIALIZED_SUCCESS':\n      return {\n        ...state,\n        initialized: true,\n      };\n    default:\n      return state;\n  }\n};\n\n\nexport const actions = {\n  initializedSuccess: () => ({type: 'INITIALIZED_SUCCESS'}),\n}\n\n\nexport const initializeApp = () => (dispatch) => {\n  let promiseAll = dispatch(userLogin());\n  Promise.all([promiseAll])\n    .then(() =>{\n      dispatch(actions.initializedSuccess());\n    })\n}\n\nexport default appReducer;","import React, {useCallback, useEffect} from 'react'\nimport {BrowserRouter as Router, Route, Redirect, BrowserRouter} from \"react-router-dom\";\nimport {useSelector} from \"react-redux\";\nimport {connect} from \"react-redux\";\n\nimport LoginPage from \"./pages/Login\";\nimport LogoutPage from \"./pages/Logout\";\nimport MainPage from \"./pages/Main\";\nimport {compose} from \"redux\";\nimport {withRouter} from \"react-router\";\nimport {initializeApp} from \"./redux/app-reducer\";\n\nconst PrivateRoute = ({ component: Component, ...rest}) =>  {\n\n  const loggedIn = useSelector((state) => Boolean(state.user));\n\n  if (!loggedIn) {\n    console.log(\"PrivateRoute: not logged in!\")\n  }\n  else {\n    console.log(\"PrivateRoute: logged in\")\n  }\n\n  return (\n    <Route\n      {...rest}\n      render={props => (\n        !loggedIn ? (\n          <Redirect to={{ pathname: '/login', state: { from: props.location }\n          }}/>\n        ) : (\n          <Component {...props}/>\n        )\n      )}/>\n  );\n};\n\nconst App = (props) => {\n  const catchAllUnhandledErrors = useCallback((e) => {\n    alert(\"promiseRejectionEvent\")\n  }, [])\n\n  useEffect(() => {\n    props.initializeApp();\n  }, [props])\n\n  useEffect(() => {\n    window.addEventListener(\"unhandledrejection\", catchAllUnhandledErrors);\n  }, [catchAllUnhandledErrors])\n\n  return(\n    <Router>\n    <Route name=\"login\" path=\"/login\" component={LoginPage} />\n    <PrivateRoute name=\"logout\" path=\"/logout\" component={LogoutPage} />\n    <PrivateRoute name=\"main\" path=\"/main\" component={MainPage} />\n    <Redirect from=\"/\" to=\"login\" />\n  </Router>\n  )\n};\n\nlet AppContainer = compose(\n  withRouter,\n  connect(null, {initializeApp}))(App);\n\n\nconst ContactListApp = () => {\n  return (\n    <BrowserRouter>\n        <AppContainer/>\n    </BrowserRouter>\n  )\n}\n\nexport default ContactListApp;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport { store } from \"./redux-composed\";\nimport ContactListApp from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst rootElement = document.getElementById(\"root\");\n\nReactDOM.render(\n  <Provider store={store}>\n    <ContactListApp />\n  </Provider>\n  , rootElement);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}